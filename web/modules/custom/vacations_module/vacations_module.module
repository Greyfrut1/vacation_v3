<?php

use Drupal\vacations_module\Entity\Certificate;



/**
 * Implements hook_cron() to create certificates for new users.
 */
function vacations_module_cron() {

  $sixMonthsAgo = strtotime('-5 minutes');
  $oneYear = strtotime('-10 minutes');

  \Drupal::messenger()->addMessage('one year' . $oneYear);
  \Drupal::messenger()->addMessage('half year' . $sixMonthsAgo);

  $certificate_query = \Drupal::entityQuery('certificate')
    ->accessCheck(FALSE);
  $certificate_query->exists('staff_id');
  $user_ids_with_certificates = $certificate_query->execute();

  $certificates = Certificate::loadMultiple($user_ids_with_certificates);
  $existing_staff_ids = [];
  foreach ($certificates as $certificate) {
    $staff_id = $certificate->get('staff_id')->target_id;
    $certificate_id = $certificate->id();
    $existing_staff_ids[$staff_id] = $certificate_id;

  }

  foreach ($existing_staff_ids as $key => $value){
    \Drupal::messenger()->addMessage('certificate: ' .  $value . ', staff id' . $key);

    $entity = \Drupal::entityTypeManager()->getStorage('certificate')->load($value);
    $current_certificate_staff_id = $entity->get('staff_id')->target_id;
    $current_certificate_date = $entity->get('created')->value;


    \Drupal::messenger()->addMessage('date: '. $current_certificate_date);
    if($current_certificate_date < $sixMonthsAgo){
      $certificate = Certificate::create([
        'staff_id' => $current_certificate_staff_id,
        'days' => 10,
      ]);
      $certificate->save();
      \Drupal::messenger()->addMessage('Certificate second created');
    }
  }

  foreach ($certificates as $certificate){
    if($certificate->get('created')->value < $oneYear){
      \Drupal::messenger()->addMessage('Older certificate:' . $certificate->id());
      $certificate->delete();
    }
  }



  $query = \Drupal::entityQuery('user')
    ->condition('created', $sixMonthsAgo, '<')
    ->accessCheck(FALSE);

  if (!empty($existing_staff_ids)) {
    $query->condition('uid', array_keys($existing_staff_ids), 'NOT IN');
  }

  $uids = $query->execute();


  foreach ($uids as $uid) {
    \Drupal::messenger()->addMessage($uid);

    $certificate = Certificate::create([
      'staff_id' => $uid,
      'days' => 10,
    ]);
    $certificate->save();
    \Drupal::messenger()->addMessage('Certificate created');
  }

}
